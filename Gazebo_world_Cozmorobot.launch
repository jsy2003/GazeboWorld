1. create simulation_ws/src
2. create package cozmo_simulation/src
3. mkdir src/cozmo_description -> launch, config, urdf 
4. create cozmo.launch
  <launch>
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="model" default="$(find cozmo_description)/urdf/cozmo.urdf"/>
  
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="world/empty.world"/>
      <arg name="debug" value="$(arg debug)"/>
      <arg name="gui" value="$(arg gui)"/>
      <arg name="paused" value="$(arg paused)"/>
      <arg name="use_sim_time" value="$(arg use_sim_time)"/>
      <arg name="headless" value="$(arg headless)"/>
    </include>
  
    <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)" />
  
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
      args="-z 1.0 -unpause -urdf -model robot -param robot_description"
    </node> 
  </launch>

3. roslaunch cozmo_simulation cozmo.launch

4. append urdf file -> drop sensor, IMU sensor, Camera sensor, skid drive gazebo plugin
                    -> transmission controllers
    -> reference : site gazebosim                 
    -> open urdf
        ...
        < !-- Gazebo Related part -->
        <!-- ROS Control pligin for Gazebo -->
        <gazebo>
          <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
              <robotNamespace>/cozmo</robotNamespace>
          </plugin>
        </gazebo>
        
        <!-- camera sensor -->
        <gazebo reference="camera_link">
          <sensor type="camera" name="cozmo_camera">
            <update_rate>2.0</update_rate>
            <camera name="headcamera">
              <horizontal_fov>1.3962634</horizontal>
              <image>
                <width>800</width>
                <height>800</height>
                <format>R8G8B8</format>
              </image>
              <clip>
                <near>0.02</near>
                <far>300</far>
              </clip>
              <noise>
                <type>gaussion</type>
                <mean>0.0</mean>
                <stddev>0.007</stddev>
              </noise>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
              <alwaysOn>true</alwaysOn>
              <updateRate>0.0</updateRate>
              <cameraname>cozmo</cameraName>
              <imageTopicName>image</imageTopicName>
              <cameraInfoTopicName>camera_info</cameraInfoTopicName>
              <frameName>camera_link</frameName>
              <hackBaseline>0.07</hackBaseline>
              <distortionK1>0.0</distortionK1>
              <distortionK2>0.0</distortionK2>
              <distortionK3>0.0</distortionK3>
              <distortionT1>0.0</distortionT1>
              <distortionT2>0.0</distortionT1>
            </plugin>
          </sensor>
        </gazebo>
        <!-- ------------------------------------ -->
        
        <!-- IR Sensor -->
        <gazebo reference="drop_ir">
          <sensor type="ray" name="TeraRanger">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>50</update_rate>
            <ray>
              <scan>
                <horizontal>
                  <sample>10</sample>
                  <resolution>1</resolution>
                  <min_angle>-0.14835</min_angle>
                  <max_angle>0.14835</max_angle>
                </horizontal>
                <vertical>
                  <sample>10</sample>
                  <resolution>1</resolution>
                  <min_angle>-0.14835</min_angle>
                  <max_angle>0.14835</max_angle>
                </vertical>
              </scan>
              <range>
                <min>0.01</min>
                <max>2</max>
                <resolution>0.02</resolution>
              </range>
            </ray>
            <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
              <gaussianNoise>0.03</gaussianNoise>
              <alwaysOn>true</alwaysOn>
              <updateRate>50</updateRate>
              <topicName>drop_sensor</topicName>
              <frameName>drop_ir</frameName>
              <radiation>INFRANGE</radiation>
              <fov>0.2967</fov>
            </plugin>
          </sensor>
        </gazebo>
        
        <gazebo reference="imu">
          <gravity>true</gravity>
          <sensor name="imu_sensor" type="imu">
            <alwaysOn>true</alwaysOn>
            <update_rate>100</update_rate>
            <visualize>true</visualize>
            <topic>__default_topic_-</topic>
            <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
              <topicName>imu</topicName>
              <bodyName>imu</bodyName>
              <updateRateHZ>10.0</updateRateHZ>
              <gaussianNoise>${0.0017*0.0017}</gaussianNosie>
              <xyzOffset>0 0 0</xyzOffset>
              <rpyOffset>0 0 0</rpyOffset>
              <frameName>imu</frameName>
            </plugin>
            <pose>0 0 0 0 0 0</pose>
          </sensor>
        </gazebo>
        
        <gazebo reference="rear_right_wheel">
          <mul1>1</mul>
          <mul2>1</mul2>
          <turnGravityOff>true</turnGravity>
        </gazebo>
        
        <gazebo reference="rear_left_wheel">
          <mul1>1</mul>
          <mul2>1</mul2>
          <turnGravityOff>true</turnGravity>
        </gazebo>
        
        <gazebo>
          <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
            <updateRate>100.0</updateRate>
            <robotNamespace>/</robotNamespace>
            <leftFrontJoint>base_to_flw</leftFrontJoint>
            <rightFrontJoint>base_to_frw</rightFrontJoint>
            <leftRearJoint>base_to_rlw</leftRearJoint>
            <rightRearJoint>base_to_rrw</rightRearJoint>
            <wheelSeparation>0.5</wheelSeparation>
            <wheelDiameter>0.4</wheelDiameter>
            <robotBaseFrame>base_link</robotBaseFrame>
            <torque>20</torque>
            <topicName>cmd_vel</topicName>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <broadcastTF>1</broadcastTF>
          </plugin>
        </gazebo>
        
        <transmission name="base_to_lift_trans">
          <type>transmission_interface/SimpleTransmission</type>
          <joint name="base_to_lift">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareJointInterface>
          </joint>
          <actuator  name="base_to_liftMotor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareJointInterface>
            <mechanicalReduction>1</mechanicalReduction>
          </actuator>
        </transmission>
        
        <transmission name="base_to_head_trans">
          <type>transmission_interface/SimpleTransmission</type>
          <joint name="base_to_head">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareJointInterface>
          </joint>
          <actuator  name="base_to_headMotor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareJointInterface>
            <mechanicalReduction>1</mechanicalReduction>
          </actuator>
        </transmission>
        
5. create cozmo_config.yaml file
   cozmo:
      joint_state_controller:
        type:joint_state_controller/JointStateController
        publish_rate:20
        
      lift_height:
        type:effort_controller/JointPositionController
        joint:base_to_lift
        pid:{p:100.0, i:0.01, d:1.0}
      head_angle:
        type:effort_controller/JointPositionController
        joint:base_to_head
        pid:{p:100.0, i:0.01, d:1.0}
        
6. append cozemo.launch
   
   #<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
   #   args="-z 1.0 -unpause -urdf -model robot -param robot_description"
   # </node> 
   <rosparam file="$(find cozmo_description)/config/cozmo_config.yaml" command="load"/>
   
   <!-- push robot_description to factory and spawn robot in gazebo -->
   <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
      args="-z 1.0 -unpause -urdf -model robot -param robot_description" respawn="false" output="screen"
   </node> 
   
   <node name="controller_spawner" pkg="controller_manager" type="spawner" ns="/cozmo" 
          args="joint_state_controller lift_height head_angle >
      <remap from="/cozmo/head_angle/command" to="/head_angle"/>
   </node>
   
   <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
      <remap from="/joint_states" to="/cozmo/joint_states"/>
      <param name="publish_frequency" type="double" value="10.0/>
   </node>
      
7. test
   $ rosnode list
   $ rostopic list
   $ roslaunch turtlebot_teleop keyboard_teleop.launch    ==> /cmd_vel topic
   $ rostopic pub /cozmo/head_angle/command std_msgs/Float64 "data:0.2"
   $rostopic pub /cozmo/lift_height/command std_msgs/Float64 "data:-0.7"
   
   $rosrun rviz rviz
   
   
                    
                    
                    
                    
  
